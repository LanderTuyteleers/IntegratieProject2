defaultTasks 'build'

buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'be.kdg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

tasks.withType(Jar) {
	destinationDir = file("$rootDir/")
}

dependencies {
	compile('io.ratpack:ratpack-spring-boot:1.1.1')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-mobile')
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
    compile("io.jsonwebtoken:jjwt:0.7.0")
    compile group: 'com.auth0', name: 'auth0-spring-security-api', version: '1.0.0'
	runtime('com.h2database:h2')
    runtime group: 'org.postgresql', name: 'postgresql', version: '42.2.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
	testCompile group: 'junit', name: 'junit-dep', version: '4.10'
	testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
	testCompile group: 'de.saly', name: 'javamail-mock2-halfmock', version: '0.5-beta4'
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	compile group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
	runtime group: 'org.postgresql', name: 'postgresql', version: '42.2.1'
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'

}
    compileJava {
//        options.compilerArgs += ["-Xlint:all", "-Werror"]
        options.deprecation = true
        options.warnings = true
    }

    compileTestJava {
//        options.compilerArgs += ["-Xlint:all", "-Werror"]
        options.deprecation = true
        options.warnings = true
    }

task fatJar(type: Jar) {
	manifest {
		attributes 'Kandoe': 'kandoe spel',
				'test-version': version,
				'Main-Class': 'be.kdg.kandoe.KandoeApplication'
	}
	baseName = project.name
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

test {
	ignoreFailures=true
}


